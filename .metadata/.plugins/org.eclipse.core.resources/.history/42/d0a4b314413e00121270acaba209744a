import java.io.File;
import java.util.List;
import java.util.ArrayList;



public class Directory {
	
	private String name;
	
	private List<String> filesNames;
	
	private List<Directory> subDirectories;
	
	public Directory(String name){
		
		this.name = name;
		
		this.filesNames = new ArrayList<String>();
		
		this.subDirectories = new ArrayList<Directory>();
		
		
		
	}
	
	//this method gets all files names inside a directory and its sub directories
	public void listFilesAndFilesSubDirectories(String path){
		
		File directory = new File (path);
		
		File[] fList = directory.listFiles();
		
		for(File file : fList){
			
			if(file.isFile()){
				
				String filename = file.getName();
				
				//don't add files with the following extension (files generated by groovy)
				if((!filename.endsWith(".class")) && (!filename.endsWith(".classpath")) &&
						(!filename.endsWith(".properties")) && (!filename.endsWith(".log")) &&
						(!filename.endsWith(".settings")) && (!filename.endsWith(".prefs")) &&
						(!filename.endsWith(".db")) && (!filename.endsWith(".jar")))
				this.filesNames.add(file.getName());
				
			} else if (file.isDirectory()){
				
				String name = file.getName();
				Directory sub = new Directory(name);
				sub.listFilesAndFilesSubDirectories(file.getAbsolutePath());
				this.subDirectories.add(sub);

			}
			
		}
		
		
	}
	
	public String toString(){
		String result = "";
		for(String fileName: this.filesNames){
			result = result + fileName + "\n";
		}
		
		for(Directory dir : this.subDirectories){
			
			result = result + "Directory " + dir.getName() + ":\n" + dir.toString() + "\n";
		}
		
		return result;
	}
	public ChangeSet compareDirectories(Directory baseDir){
		ChangeSet result = null;
	
		
		return result;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public List<String> getFilesNames() {
		return filesNames;
	}

	public void setFilesNames(List<String> filesNames) {
		this.filesNames = filesNames;
	}

	public List<Directory> getSubDirectories() {
		return subDirectories;
	}

	public void setSubDirectories(List<Directory> subDirectories) {
		this.subDirectories = subDirectories;
	}
	
	
}
